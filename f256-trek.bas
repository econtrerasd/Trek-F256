10    rem "F256 TREK - REIMAGINED BY ERNESTO CONTRERAS JUNE 2024"20    print "Loading Resources..."30    loadpalette("default")40    loadfont("trek/trek")50    bload "trek/trek.bspr",$3000060    bload "trek/trek.fbmp",$2400070    dim c(9,2),k(3,3),n(3),d#(8):g=alloc(64):z=alloc(64):se=alloc(64)80    shapes=alloc(50):panel=alloc(12):es=190    ent$=chr$(128)+chr$(129)+chr$(130)100   kli$=chr$(131)+chr$(132)+chr$(133)110   bas$=chr$(134)+chr$(135)+chr$(136)120   cls :sprites on 130   for c=0 to 11:read a:?(panel+c)=a:next 135   while 1=1140   drawscreen():for c=0 to 49:?(shapes+c)=255:next 150   memcopy $24000+320*64 rect 160,70 by 320 to $10000+80+320*25160   initmission()170   newquadrant()180   clrmain():tactical()190   rem "MAIN LOOP"200   maingame()210   wend 220   end 1000  proc newquadrant()1010  clrconsole()1020  z4=q1:z5=q2:k3=0:b3=0:s3=0:g5=0:r1=01030  ?(z+q1*8+q2)=?(g+q1*8+q2)1040  for c=0 to 64:poke se+c,0:next 1050  rem "PUT You THEN K3 KLIN, B3 Bases & s3 stars"1060  z1=s1:z2=s2:updatequadrant(1):rem "1=ent"1070  quadrantname()1080  rect solid color 0 from 0,0 to 319,1261090  for c=0 to random(32)+161100  plot color random(7)+2 to random(319),random(127)1110  next 1120  printat(spc(25),0,0):printat(spc(25),80-25,31)1130  printat(g2$,0,0):printat(g2$,80-len(g2$),31)1140  showface(3):printat("Entering Quadrant "+g2$,23,34)1150  printat("Scanning... ",23,35):sfx(8)1160  k3=int(?(g+q1*8+q2)%100\10):b3=int(?(g+q1*8+q2)\100)1170  s3=?(g+q1*8+q2)%101180  pause(3)1190  if k3>01200  showface(4)1210  printat("Klingons detected Captain!",23,37)1220  if s<2001230  printat("I recommend reinforcing Shields!",23,38)1240  endif 1250  for i=1 to 3:k(i,1)=0:k(i,2)=0:k(i,3)=0:next 1260  if k3>=11270  for i=1 to k31280  findspace()1290  z1=r1:z2=r2:k(i,3)=200:rem "2=kling"1300  updatequadrant(2):k(i,1)=r1:k(i,2)=r2:?(shapes+5+i)=121310  next 1320  endif 1330  else 1340  printat("No enemies detected Sir.",23,36)1350  endif 1360  if b3>=11370  findspace()1380  b4=r1:b5=r2:updatequadrant(3):rem "3=base"1390  endif 1400  for i=1 to s31410  findspace():updatequadrant(4)1420  next 1430  nw=1:vw=01440  endproc 1500  proc navigate()1510  ph=0:if (d#(1)<0)&(w1>2)1520  showface(3):if vw<>3 then tactical()1530  printat("Warp engines damaged Sr., maximum Warp is 0.3",23,34)1540  else 1550  if e>101560  for i=1 to 3:k(i,0)=random(3):next 1570  if k3>0 then moveklingons()1580  moveplayer()1590  if nw=11600  vw=0:newquadrant():tactical()1610  else 1620  kfire()1630  endif 1640  n=di\8:t8#=n*1.1:e=e-n:powermeter()1645  if h=0 then repairdamage()1650  endif 1660  endif 1670  for c=1 to 9:sprite 19+c image 38+c:next :h=01680  endproc 1750  proc tactical()1760  if vw<>3 then clrmain()1770  if (nw=0)&(ph=0)1780  clrconsole()1785  if d#(2)>=01790  showface(3):printat("Tactical update onscreen Captain.",23,34)1795  endif 1800  endif 1810  o1$=chr$(127)+"___":o1$=o1$+o1$+o1$+o1$+o1$+o1$+o1$+o1$+chr$(127)1820  for i=s1-1 to s1+11830  for j=s2-1 to s2+11840  z1=i:z2=j:searchquadrant(3)1850  if z3=11860  d0=1:c$="DOCKED":p=p01870  basedock()1880  i=s1+1:j=s2+11890  endif 1900  next 1910  next :d0=01920  if k3>01930  c$=chr$(137)+chr$(138)+"RED"+chr$(139)+chr$(140):col=2401940  if nw<>0 then sfx(4)1950  while playing(0)=true :wend 1960  else 1970  c$=chr$(137)+chr$(138)+"GREEN"+chr$(139)+chr$(140):col=2511980  if e<e0*0.1 then c$=chr$(137)+chr$(138)+"YELLOW"+chr$(139)+chr$(140)1990  if e<e0*0.1 then col=2461995  else :for c=1 to 3:sprite 5+c off :next 2000  endif 2010  printat(c$,40-len(c$)\2,32)2020  rect solid color col from 136,128 to 188,1322040  if d#(2)<0:clrmain():printat("Short range sensors out",27,48)2060  else :printat(o1$,23,42):endif 2070  ro=1:kl=1:st=02080  for i=0 to 7:a$="|"2090  for j=0 to 7:vi=12092  if d#(2)<02095  if (exs>0)&(j<s2) then vi=02096  if (exs<0)&(j>s2) then vi=02097  endif 2100  a=?(se+i*8+j)2110  if exs=1:ki=0:else :ki=2:endif 2115  ?(shapes+5)=ki2120  if a=1 then a$=a$+ent$+"|":sprite 5 image ki to j*40+20,i*16+82140  if a=2:a$=a$+kli$+"|"2141  while (k(kl,3)<=0)&(kl<3):kl=kl+1:wend 2142  ki=?(shapes+5+kl)2145  if (k(kl,3)>=0)&(vi=1)2146  if ?(shapes+5+kl)=255 then ?(shapes+5+kl)=12:ki=122147  sprite 5+kl image ki to j*40+20,i*16+8:?(shapes+5+kl)=ki2150  else :sprite 5+kl off :?(shapes+5+kl)=2552152  endif 2155  kl=kl+1:endif 2160  if a=4:a$=a$+" * |":sprite 10+st image 4+((i+j+q1+q2)%4)*22165  if vi=1 sprite 10+st image 4+((i+j+q1+q2)%4)*22170  ?(shapes+10+st)=4+((i+j+q1+q2)%4)*22175  sprite 10+st to j*40+20,i*16+82180  else :?(shapes+10+st)=255:sprite 10+st off :endif 2185  roundrect(j*40+15,i*16+3,j*40+24,i*16+12,1,0):st=st+12195  endif 2200  if (a=3):a$=a$+bas$+"|"2205  if vi=1:sprite 9 image 47 to j*40+20,i*16+8:?(shapes+9)=472210  else :sprite 9 off :?(shapes+9)=255:endif 2215  endif 2220  if a=0 then a$=a$+"   |"2230  next 2235  if d#(2)>=02240  printat(a$,23,42+ro):ro=ro+1:if vw<>3 then sound 1,1200,22250  printat(o1$,23,42+ro):ro=ro+1:if vw<>3 then sfx(5)2255  endif 2260  next 2280  vw=3:nw=02290  endproc 2500  proc lrscan()2510  clrmain():clrconsole()2515  if e>402520  if d#(3)<02530  showface(2):printat("Long range sensors are inoperable, sir!",23,34)2540  else 2550  showface(1):printat("Long range probes launched...",23,34)2560  sfx(10):pause(4)2570  printat("Surrounding Quadrant data coming in.",23,35):pause(2)2580  printat(left$(o1$,13),33,47):d=02590  for i=q1-1 to q1+12600  n(1)=-1:n(2)=-2:n(3)=-32610  for j=q2-1 to q2+12620  if (i>=0)&(i<8)&(j>=0)&(j<8)2630  n(j-q2+2)=?(g+i*8+j):?(z+i*8+j)=?(g+i*8+j)2640  endif 2650  next 2660  printat("|",33,48+d*2)2670  for l=1 to 32680  if n(l)<02690  printat("***|",30+l*4,48+d*2)2700  else 2710  printat(right$(str$(n(l)+1000),3)+"|",30+l*4,48+d*2)2720  endif 2730  next 2740  printat(left$(o1$,13),33,49+d*2):sfx(5):d=d+12750  next 2755  e=e-60:powermeter()2760  endif 2765  else 2766  showface(0):printat("Not enough energy for Long range scan.",23,34)2767  endif 2770  vw=22780  endproc 2800  proc shieldcontrol()2810  if d#(7)<02830  printat("Shield Control inoperable",5,48+row):row=row+12840  endif 2850  x=sh:rem "Get shield str from joyinterface"2860  if (x<0)^(s=x)2870  txt$="<SHIELDS UNCHANGED>"2880  printat(txt$,5,48+row):row=row+12890  endif 2900  if x<=e+s2910  e=e+s-x:s=x:txt$="Deflector control room report:"2920  printat(txt$,5,48+row):row=row+12930  txt$="'Shields now at "+str$(s)+" Units per your command.'"2940  printat(txt$,5,48+row):row=row+12950  else 2960  txt$="Not enough energy for requested shield strenght!'"2970  printat(txt$,5,48+row):row=row+12980  txt$="<SHIELDS UNCHANGED>"2990  printat(txt$,5,48+row):row=row+13000  endif 3010  endproc 3900  proc galacticmap()3920  clrmain():showface(0):clrconsole()3930  printat("Showing computer records of the galaxy onscreen,",23,34)3940  printat("current quadrant in blue.",23,35)3950  printat(o1$,23,42):txt$="":d=03960  for i=0 to 73970  for j=0 to 73980  if ?(z+i*8+j)=03990  printat("|***",23+j*4,43+d*2)4000  else 4010  printat("|"+right$(str$(?(z+i*8+j)+1000),3),23+j*4,43+d*2)4020  endif 4030  next 4040  printat("|",55,43+d*2):sfx(7)4050  printat(o1$,23,44+d*2):d=d+1:sfx(5)4060  next 4070  sprite 34 image 36 to 103+q2*16,178+q1*84080  vw=14090  endproc 4200  proc checkenergy()4210  if (s+e)>104220  if e<104230  if d(7)<>04240  clrconsole()4250  txt$="** FATAL ERROR **  You've just stranded your ship in space! "4260  printat(txt$,5,40)4270  txt$="You have insuficient maneuvering energy, and shield control."4280  printat(txt$,5,41)4290  txt$="and Shiels Control is currently incapable of sending"4300  printat(txt$,5,42)4310  txt$="energy to Impulse Engines!"4320  printat(txt$,5,43)4330  endif 4340  endif 4350  endif 4360  endproc 4900  proc missionstatus()4910  showface(1):clrconsole()4920  printat("Captain, this is our mission status report:",23,34)4930  if k9>1x$="s"else x$=""endif 4940  printat("Invading Klingon"+x$+" Left: "+str$(k9),23,36)4950  a$=left$(str$(0.1*int((t0#+t9-t#)*10)),4)4960  printat("Mission must be completed in "+a$+" Stardates",23,37)4970  x$="s":if b9<2 then x$=""4980  if b9<14990  printat("Unfortunately, all Starbases have been destroyed",23,38)5000  else 5010  printat("The Federation has "+str$(b9)+" Starbase"+x$,23,38)5020  endif 5030  endproc 5100  proc findspace()5110  rem "Find space in quadrant"5120  z3=15130  repeat 5140  r1=random(8):r2=random(8):z1=r1:z2=r25150  if peek(se+r1*8+r2)=0 then z3=05160  until z3=05170  endproc 5200  proc updatequadrant(type)5210  rem "updatequadrant"5220  pos=z1*8+z25230  poke se+pos,type5240  endproc 5300  proc searchquadrant(type)5310  z3=05330  if peek(se+z1*8+z2)=type then z3=15340  endproc 5400  proc quadrantname()5410  rem "Z4,Z5 (=Q1,Q2)"5420  if z5<=35430  if z4=0 then g2$="ANTARES"5440  if z4=1 then g2$="RIGEL"5450  if z4=2 then g2$="PROCYON"5460  if z4=3 then g2$="VEGA"5470  if z4=4 then g2$="CANOPUS"5480  if z4=5 then g2$="ALTAIR"5490  if z4=6 then g2$="SAGITTARIUS"5500  if z4=7 then g2$="POLLUX"5510  else 5520  if z4=0 then g2$="SIRIUS"5530  if z4=1 then g2$="DENEB"5540  if z4=2 then g2$="CAPELLA":5550  if z4=3 then g2$="BETELGEUSE"5560  if z4=4 then g2$="ALDEBARAN"5570  if z4=5 then g2$="REGULUS"5580  if z4=6 then g2$="ARCTURUS"5590  if z4=7 then g2$="SPICA"5600  endif 5610  if g5<>15620  if (z5=0)^(z5=4) then g2$=g2$+" I"5630  if (z5=1)^(z5=5) then g2$=g2$+" II"5640  if (z5=2)^(z5=6) then g2$=g2$+" III"5650  if (z5=3)^(z5=7) then g2$=g2$+" IV"5660  endif 5670  endproc 5750  proc fnd():rem "FUNCTION D, RETURNS VALUE"5760  pow2(k(i,1)-s1):value1=value5770  pow2(k(i,2)-s2):value=value+value1:sqr(value)5780  endproc 5850  proc sqr(n):rem "FUNCTION SQR -NEWTON'S METHOD OF CALCULATING SQRT, RETURNS GUESS#"5860  n#=n:guess#=n#5870  while (0.1<abs(guess#*guess#-n#))5880  guess#=(guess#+n/guess#)/25890  wend 5900  endproc 5950  proc pow2(n):rem "Calculate n^2"5960  value=n*n5970  endproc 6000  proc loadpalette(a$)6010  bload "palettes/"+a$+".pal",$78006020  ?1=1:for c=0 to 2023:?($D000+c)=?($7800+c):next :?1=06030  endproc 6100  proc printat(a$,cx,cy)6110  local pos:pos=cx+cy*80:?1=26120  for c=0 to len(a$)-1:?(pos+c+$C000)=asc(mid$(a$,c+1,1)):next 6130  endproc 6150  proc clrmain()6155  rect color 1 solid from 92,168 to 223,2356160  for c=0 to 166170  printat(spc(33),23,42+c)6180  next 6190  endproc 6250  proc clrconsole()6260  for c=0 to 5:printat(spc(56),23,34+c):next 6270  endproc 6280  proc loadfont(txt$)6290  txt$=txt$+".font":bload txt$,$78006300  ?1=1:for c=0 to 2047:?($C000+c)=?($7800+c):next :?1=06310  endproc 6350  proc drawscreen()6360  cls 6370  bitmap on :bitmap clear 0:sprites on 6380  rect color 33 solid from 0,128 to 319,2396390  rect color 1 solid from 92,168 to 223,2356400  rect color 32 outline from 91,167 to 224,2366500  rect color 1 solid from 2,168 to 40,2376600  rect color 32 outline from 2,167 to 40,2376700  rect color 1 solid from 45,168 to 86,2376800  rect color 32 outline from 45,167 to 86,2376900  rect color 3 solid from 4,134 to 86,162:rem "72"6910  btn("GXY",6,136,27)6920  btn("LRS",34,136,226):rem "115"6930  btn("SRS",62,136,53)6940  btn("DMG",6,152,145)6950  btn("MIS",34,152,234)6960  btn("NAV",62,152,164)6970  roundrect(231,207,244,216,248,33)6980  line color 0 from 0,128 to 24,1286990  line color 0 from 0,129 to 4,1297000  line color 0 from 295,128 to 319,1287010  line color 0 from 315,129 to 319,1297020  rect color 1 solid from 92,134 to 315,1627030  rect color 32 outline from 91,134 to 316,1627040  rect color 208 solid from 136,128 to 188,1327050  line color 33 from 100,127 to 220,1277060  sprite 32 image 22 to 22,1967070  sprite 33 image 35 to 58,2107080  roundrect(50,180,81,190,248,0)7090  rect outline color 32 from 251,167 to 316,2327100  showface(-1)7110  sprite 20 image 39 to 247,2127120  sprite 21 image 40 to 243,2077130  sprite 22 image 41 to 238,2047140  sprite 23 image 42 to 233,2077150  sprite 24 image 43 to 229,2127160  sprite 25 image 44 to 233,2177170  sprite 26 image 45 to 238,2207180  sprite 27 image 46 to 243,2177190  rect color 1 solid from 227,168 to 249,1927200  rect color 32 outline from 226,167 to 249,1937210  roundrect(50,220,81,230,248,0)7220  guitext()7230  endproc 7300  proc guitext()7310  printat("Shields",2,43):printat("Offline",2,54)7320  a$="00 %":printat(a$,4,56)7330  printat("Phasers",13,43)7340  printat("Ready",14,46)7350  printat("Ready",14,56)7360  printat("Photons",13,49)7370  printat("STARDATE",63,59)7380  printat("Power",57,42)7390  printat("Computer",7,32)7400  printat("Wrp",58,56)7500  printat("1.1",58,57)7510  printat("x10",16,52)7520  printat("Helm.",57,49)7525  printat("E",57,42)7530  endproc 7600  proc updatetime(t#)7610  a$=left$(str$(t#+0.001),6)7620  printat(a$,72,59)7630  endproc 7700  proc roundrect(x,y,x1,y1,col,col2)7710  rect solid color col from x,y to x1,y17720  plot color col2 to x,y:plot to x1,y7730  plot to x,y1:plot to x1,y17740  endproc 8100  proc maneuverenergy()8110  rem "MANEUVER ENERGY S/R **"8120  e=e-n-108130  if e<08140  print "SHIELD CONTROL SUPPLIES ENERGY TO COMPLETE THE MANEUVER."8150  s=s+e:e=08160  if s<=0 then s=08170  endif 8180  endproc 8200  proc getdevicename(r1)8210  rem "PRINTS DEVICE NAME"8220  if r1=1 then g2$="WARP DRIVE"8230  if r1=2 then g2$="SHORT RANGE SENSORS"8240  if r1=3 then g2$="LONG RANGE SENSORS"8250  if r1=4 then g2$="PHASERs"8260  if r1=5 then g2$="PHOTONs"8270  if r1=6 then g2$="DAMAGE CONTROL"8280  if r1=7 then g2$="SHIELDs"8290  endproc 8400  proc initmission()8410  t#=(random(20)+20)*100:t0#=t#:t9=25+random(10):d0=0:e=3000:e0=e8420  p=10:p0=p:s9=200:s=0:b9=2:k9=0:x$="":x0$=" IS "8430  powermeter()8450  q1=random(8):q2=random(8):s1=random(8):s2=random(8)8460  for i=1 to 9:c(i,1)=0:c(i,2)=0:next 8470  c(3,1)=-1:c(2,1)=-1:c(4,1)=-1:c(4,2)=-1:c(5,2)=-1:c(6,2)=-18480  c(1,2)=1:c(2,2)=1:c(6,1)=1:c(7,1)=1:c(8,1)=1:c(8,2)=1:c(9,2)=18490  for i=1 to 8:d#(i)=0:next 8500  rem "SETUP K3= # KLING  B3= # BASES  S3 = # STARS"8505  b9=0:while b9=08510  for i=0 to 78520  for j=0 to 78530  k3=0:?(z+i*8+j)=0:r1#=rnd(1)8540  if r1#>0.98 then k3=3:k9=k9+3:goto 85708550  if r1#>0.95 then k3=2:k9=k9+2:goto 85708560  if r1#>0.80 then k3=1:k9=k9+18570  b3=0:if random(100)>=96 then b3=1:b9=b9+18580  ?(g+i*8+j)=(k3*10)+(b3*200)+random(8)+18590  next 8600  next 8605  wend 8610  if k9>t9 then t9=k9+18660  k7=k9:if b9<>1 then x$="s":x0$=" are "8670  showface(1)8680  printat("Captain, we have received orders from Starfleet:",23,34)8690  printat("Destroy the "+str$(k9)+" Klingon Warships invading",23,35)8700  printat("the galaxy before they can attack sector 001 ",23,36)8710  printat("on stardate "+str$(t0#+t9)+", we have "+str$(t9)+" days.",23,37)8720  updatetime(t0#)8730  printat("There"+x0$+str$(b9)+" Starbase"+x$+" for ressuply.",23,38)8740  printat("->Any key to begin",60,39)8750  key=0:xs=1:while key=0:key=inkey():wend :clrconsole()8760  endproc 8900  proc btn(a$,x,y,col)8910  rect outline color 2 from x-1,y-1 to x+17,y+9:rem "32"8920  rect solid color col from x,y to x+16,y+88930  rect solid color col+2 from x,y to x+16,y+18940  rect solid color col+1 from x,y+1 to x+1,y+78950  rect solid color col+1 from x,y+1 to x,y+88960  rect solid color col+1 from x+15,y+1 to x+16,y+88970  line color col+2 from x+2,y+2 to x+14,y+28980  line color col+2 from x+1,y+1 to x+15,y+18990  rect solid color col-1 from x+1,y+8 to x+15,y+89000  printat(a$,x\4+1,y\4+1)9010  endproc 9050  proc updateshields()9055  sh=int(5*s\24)9060  if sh<>09065  if sh>=50 sprite 32 image 23:?(shapes+32)=239070  else :sprite 32 image 25:?(shapes+32)=259075  endif 9080  else :sprite 32 image 22:?(shapes+32)=229085  endif 9090  if sh>0 then printat("Engaged",2,54)9092  if sh=0 then printat("Offline",2,54)9095  printat(right$("00"+str$(sh),3),3,56)9098  sprite 0 image 499099  endproc 9100  proc setshields()9110  clrconsole()9120  sprite 0 off :k=0:sfx(5):sprite 34 image 37 to 20,2329130  printat("  Set  ",2,54)9140  while k<>139150  k=inkey()9160  if k=2 then sh=sh-59170  if k=6 then sh=sh+59180  if k=16 then sh=sh+209190  if k=14 then sh=sh-209200  if (sh<0) then sh=0:sfx(7)9205  if (sh>100) then sh=100:sfx(7)9210  printat(right$("00"+str$(sh),3),3,56)9220  if sh<>09230  if sh>=50 sprite 32 image 23:?(shapes+32)=239240  else :sprite 32 image 25:?(shapes+32)=259250  endif 9260  else :sprite 32 image 22:?(shapes+32)=229270  endif 9280  wend 9290  sprite 34 off 9300  if sh=0 then printat("Offline",2,54)9310  if sh>0 then printat("Engaged",2,54)9320  sprite 0 image 499330  e=e-((sh\5)*24-s):powermeter():s=(sh\5)*249340  showface(3)9350  if sh>0 then printat("Setting shields at "+str$(sh)+"% Sir!",23,34)9360  if sh=0 then printat("Shields Offline.",23,34)9370  for c=1 to sh\20:sfx(11):next 9380  endproc 9500  proc showface(c)9510  if c>=09520  memcopy $24000+(64*c) rect 64,64 by 320 to $10000+320*168+2529530  else 9540  rect solid color 0 from 252,168 to 315,2319550  endif 9560  endproc 9600  proc maingame()9610  ed=0:sprite 0 image 49 to 24,148:px=0:py=0:opt=09620  while (ed=0)&(e>0)&(k9>0)9630  k=inkey()9640  if k=09650  if event(blink,10)9660  ani=ani+1&19670  for c=10 to 10+s3-1:a=?(shapes+c)9680  if a<>255 then sprite c image a+ani9690  next 9700  endif 9710  if event(ships,29)9720  ani2=ani2+1&19730  for c=5 to 5+k39740  if ?(shapes+c)<>255 then sprite c image ?(shapes+c)+ani9750  next 9760  if s>0 then sprite 32 image ?(shapes+32)+ani9770  endif 9780  else 9790  pxa=px:pya=py9800  if k=6 then px=px+19810  if k=2 then px=px-19820  if (px<0)^(px>2) then sfx(7):px=pxa9830  if k=14 then py=py+19840  if k=16 then py=py-19850  if (py<0)^(py>3) then sfx(7):py=pya9860  opt=py*3+px:if ?(panel+opt)=0 then sfx(7):px=pxa:py=pya:goto 98609870  opt=?(panel+opt)9880  if opt=1 then sprite 0 to 24,148:px=0:py=09890  if opt=2 then sprite 0 to 52,148:px=1:py=09900  if opt=3 then sprite 0 to 80,148:px=2:py=09910  if opt=4 then sprite 0 to 24,164:px=0:py=19920  if opt=5 then sprite 0 to 52,164:px=1:py=19930  if opt=6 then sprite 0 to 28,200:px=0:py=29940  if opt=7 then sprite 0 to 72,192:px=1:py=29950  if opt=8 then sprite 0 to 72,232:px=1:py=39960  if opt=9 then sprite 0 to 250,228:px=2:py=39970  if opt=10 then sprite 0 to 80,164:px=2:py=19980  if k=139990  sprite 34 off :sprite 0 image 50:sfx(5):pause(1):sprite 0 image 4910000 if opt=1 then galacticmap()10010 if opt=2 then lrscan()10020 if opt=3 then tactical()10030 if opt=4 then showdamage()10040 if opt=5 then missionstatus()10045 if opt=6 then setshields()10050 if opt=7 then phasers()10055 if opt=8 then photontorpedo()10060 if opt>=9 then if vw<>3 then tactical()10070 if opt=9 then w1=0:navopt():navigate()10080 if opt=10 then w1=0:calcnav():navigate()10090 endif 10110 endif 10120 if t8#<>0 then t0#=t0#+t8#:updatetime(t0#):t8#=010130 if ed=1 then explode(s1,s2,3):sprite 5 off 10140 wend 10150 endgame()10160 endproc 11100 proc calcnav()11110 if d#(2)<011120 showface(2):clrconsole()11122 printat("Computer Navigation is damaged Sir!",23,34)11125 x=s2:y=s1:pause(3)11130 else 11140 showface(1):clrconsole()11150 printat("Select target sector",23,34)11160 sprite 34 image 36 to 103+s2*16,178+s1*8:x=s2:y=s111170 k=0:while k<>1311180 k=inkey()11190 if k=6 then x=x+1:if x>7 then x=011200 if k=2 then x=x-1:if x<0 then x=711210 if k=16 then y=y-1:if y<0 then y=711220 if k=14 then y=y+1:if y>7 then y=011230 sprite 34 image 36 to 103+x*16,178+y*811240 wend 11250 sprite 34 off :e=e-1:powermeter()11260 endif 11270 trayectory(s2,s1,x,y):w1=di\3211280 endproc 11300 proc getpixel(z4,z5)11310 xpeek($10000+z4+z5*320):pix=peekvalue11320 endproc 11350 proc xpeek(n)11360 z4=n\819211370 offset=n%819211380 ?0=179:z5=?$E:?$E=z4:?1=411390 peekvalue=?($C000+offset)11400 ?1=0:?$E=z511410 endproc 11600 proc navopt()11610 for c=1 to 9:sprite 19+c image 38+c:next 11630 k=0:sprite 20 image 27:c1=1:sprite 0 off 11640 while k<>1311650 k=inkey()11660 if k=2 then c1=c1-111670 if k=6 then c1=c1+111680 if c1<1 then c1=811690 if c1>8 then c1=111700 if k<>0 then for c=1 to 9:sprite 19+c image 38+c:next 11710 sprite 19+c1 image 26+c111720 wend 11725 if w1<1011730 sfx(5):sprite 34 image 37 to 240,23611740 k=0:w1=0:while k<>1311750 k=0:k=inkey()11760 if k=6 then w1=w1+111770 if k=2 then w1=w1-111780 if k=16 then w1=w1+811790 if k=14 then w1=w1-811800 if w1>27 then w1=2711810 if w1<0 then w1=011820 printat(left$(str$(w1/3),3)+"  ",58,57)11830 wend 11840 sprite 34 off :sfx(5)11845 endif 11860 sprite 0 image 4911870 qx=0:qy=0:x=s2+c(c1,2)*w111880 y=s1+c(c1,1)*w111890 endproc 12000 proc powermeter()12010 if e>3000 then e=300012015 local e1:e1=e:ex=0:ey=012020 if pw=0 then for d=0 to 4:printat(spc(5),57,43+d):next 12030 while e1>012040 if e1>=120:printat(chr$(180),57+ex,43+ey):e1=e1-120:ex=ex+112050 else 12060 if e1>=96 then d=180:goto 1211012070 if e1>=72 then d=225:goto 1211012080 if e1>=48 then d=226:goto 1211012090 if e1>=24 then d=182:goto 1211012100 if e1>0 then d=18312110 printat(chr$(d),57+ex,43+ey):e1=012120 endif 12130 if ex>4 then ex=0:ey=ey+112140 wend 12150 printat(right$("0000"+str$(e),4),58,42):pw=012160 endproc 12200 proc trayectory(x1,y1,x2,y2)12210 x1=x1*5:x2=x2*5:y1=y1*2:y2=y2*212220 if x1>x2:xs=-1 else xs=1:endif 12230 if y1>y2:ys=-1 else ys=1:endif 12240 sqr(abs(x2-x1)*abs(x2-x1)+abs(y2-y1)*abs(y2-y1)):di=int(guess#)12250 xi#=(x2-x1)*2/(di+1):yi#=(y2-y1)*2/(di+1):di=di*412260 if x1=x2 then if y1=y2 then xi#=0:yi#=0:di=112270 endproc 12280 proc sfx(a)12290 sound 0,0,1:sound 1,0,1:sound 2,0,112300 if a=1 then sound 0,2000,25,3312310 if a=1 then sound 0,2000,25,3312320 if a=2 then for c=0 to 15:sound 0,50,5,35:sound 1,2000,5,-30:next 12330 if a=3 then sound 0,2200,26,32:sound 3,2000,26,-212340 if a=4 then :for c=1 to 3:sound 0,3000,30,-6-c*2:sound 2,2500,30,10:next 12350 if a=5 then sound 1,1200,2:sound 2,1500,412360 if a=6 then sound 3,999,12:sound 3,999,6,1:sound 0,900+random(1000),15,3312370 if a=7 then sound 1,2000,512380 if a=8 then for c=0 to 15:sound 0,random(2000)+1000,5:next 12390 if a=9 then for c=0 to 8:sound 0,500,8,30:sound 1,2000,5,-30:next 12400 if a=10 then for c=1 to 8:sound 0,1200,7,15:sound 0,900,10,-20:next 12410 if a=11 then sound 0,650,30,-11:sound 1,800,30,-1312415 if a=12 then sound 0,800,4,-31:sound 1,1500,4,-2312416 if a=13 then sound 3,500,10,-1012420 endproc 12500 proc pause(c)12510 for d=0 to 5000*c:next 12520 endproc 12600 proc moveklingons()12610 for i=1 to 312615 if k(i,3)>012620 sprite 5+i to 20+k(i,2)*40,8+k(i,1)*1612630 if k(i,0)=012640 z1=k(i,1):z2=k(i,2):updatequadrant(0)12650 findspace()12660 trayectory(k(i,2),k(i,1),z2,z1):sc=012670 if xs=-1:ki=14:else ki=12:endif :?(shapes+5+i)=ki12680 c=0:while (c<=di)&(sc=0)12690 sprite 5+i to 20+k(i,2)*40+int(xi#*c),8+k(i,1)*16+int(yi#*c)12700 sprite 5+i image ki12710 for co=5 to 18:if co<>5+i then sc=sc+hit(5+i,co)12715 if d#(2)<0 then sprite 5+i off 12720 next 12730 c=c+1:wend 12740 d=1:z1=k(i,1):z2=k(i,2):while (d<>0)&(k(i,3)>0)12750 k(i,2)=(z2*40+int(xi#*c)+20)\4012760 k(i,1)=(z1*16+int(yi#*c)+8)\1612770 d=?(se+k(i,1)*8+k(i,2))12780 if d<>0:explode(k(i,2),k(i,1),1):c=c-212781 k(i,3)=k(i,3)-1012782 if k(i,3)<=0:printat(" Enemy destroyed!",56,34+i)12783 explode(k(i,2),k(i,1),4):k3=k3-1:k9=k9-1:sprite 5+i off 12784 z1=k(i,2):z2=k(i,1):updatequadrant(0):?(g+q1*8+q2)=?(g+q1*8+q2)-1012785 ?(z+q1*8+q2)=?(g+q1*8+q2)12786 endif 12787 endif 12790 wend 12800 z1=k(i,1):z2=k(i,2):updatequadrant(2)12810 if k(i,3)>0 then sprite 5+i to 20+k(i,2)*40,8+k(i,1)*1612820 endif 12830 endif 12835 next 12840 endproc 12900 proc explode(x,y,n)12910 local c,d,a:sprite 2 off 12920 for c=1 to n12930 sprite 2 image 19 to x*40+10+random(20),y*16+4+random(8)12940 sfx(6)12950 poke $D00D,$10+random(20)12960 for d=19 downto 16:sprite 2 image d12965 for a=0 to 4:r1=random(5):pokel $D101,$10000+r1:poke $D004,r1*1612966 for r1=1 to 300:next :next 12970 next 12975 next 12980 sprite 2 off 12990 pokel $D00D,$000000:poke $D101,$10000:poke $D004,0:r1=013000 endproc 13100 proc moveplayer()13110 trayectory(s2,s1,x,y):sc=0:qc=0:nz=013120 if xs=-1:ki=3:exs=-1:else :ki=1:exs=1:endif 13130 z1=s1:z2=s2:updatequadrant(0)13140 c=0:while (c<di+1)&(sc=0)13150 if 20+s2*40+int(xi#*c)<8 then c=di:qc=113160 if 20+s2*40+int(xi#*c)>312 then c=di:qc=113170 if 8+s1*16+int(yi#*c)>121 then c=di:qc=113180 if 8+s1*16+int(yi#*c)<5 then c=di:qc=113190 sprite 5 image ki13200 if qc=0 then sprite 5 to 20+s2*40+int(xi#*c),8+s1*16+int(yi#*c)13210 for co=6 to 18:if (co<>5)&(co<>9) then sc=sc+hit(5,co)13215 next 13220 c=c+1:wend 13230 if qc=013240 d=1:while d<>013250 sx=(s2*40+int(xi#*c)+20)\4013260 sy=(s1*16+int(yi#*c)+8)\1613270 d=?(se+sy*8+sx)13280 if d<>0 then explode(sx,sy,1):c=c-1:sc=113285 wend 13286 if sc>0:r1=random(7)+1:d#(r1)=d#(r1)-rnd(1)13290 printat("Ship collisioned atmosphere!",23,34)13294 if r1=7 then sprite 31 image 38 to 22,19613295 getdevicename(r1):printat(g2$+" Damaged!",23,35)13296 printat("Press any key to continue",23,37):clrconsole()13297 k=0:while k=0:k=inkey():wend :endif 13300 s2=sx:s1=sy:z1=s1:z2=s2:updatequadrant(1):tactical()13310 sprite 5 to 20+s2*40,8+s1*16:es=xs13320 else 13330 q1p=q1:q2p=q213340 if x<0 then q2=q2-1+x\8:s2=8-x%8:nw=113350 if x>7 then q2=q2+x\8:s2=x%8:nw=113360 if y<0 then q1=q1-1+y\8:s1=8-y%8:nw=113370 if y>7 then q1=q1+y\8:s1=y%8:nw=113380 for c=5 to 19:sprite c off :next 13390 if (q1<0) then q1=0:nz=1:s1=013400 if (q2<0) then q2=0:nz=1:s2=013410 if (q1>7) then q1=7:nz=1:s1=713420 if (q2>7) then q2=7:nz=1:s2=713425 updatequadrant(1)13430 endif 13440 if nz=113450 showface(1):clrconsole()13460 printat("Trayectory will take us into neutral zone..",23,34):pause(2)13470 printat("Requesting Authorization from Starfleet command...",23,35)13480 for c=0 to 4:sfx(5):pause(2):next 13490 printat("Starfleet Denies the request!",23,36):pause(2)13500 showface(3):printat("Overriding trayectory...",23,37):pause(2)13510 if (q1p=q1)&(q2p=q2) then nw=013515 nz=013520 endif 13530 endproc 13600 proc kfire()13610 if k3>013620 for i=1 to 313630 if (k(i,0)>=1)&(k(i,3)>0)13640 trayectory(k(i,2),k(i,1),s2,s1):pix=013650 c=0:while (c<di)&(pix<>1)13660 z4=int(k(i,2)*40+20+c*xi#):z5=int(k(i,1)*16+8+c*yi#)13670 getpixel(z4,z5)13680 c=c+1:wend 13690 if c=di:sprite 4 image 20 to s2*40+20,s1*16+8:a=1:else :a=0:endif 13692 if c=di:h=1:else :h=0:endif 13695 sprite 4 off 13700 sfx(9)13705 for d=1 to 20013710 line color 243 from k(i,2)*40+20,k(i,1)*16+8 to z4,z513720 if (s>0)&(a=1) then sprite 4 image 2013740 line color 245 from k(i,2)*40+20,k(i,1)*16+8 to z4,z513750 if (s>0)&(a=1) then sprite 4 image 2113760 next 13780 for c=1 to 10:next 13790 line color 0 from k(i,2)*40+20,k(i,1)*16+8 to z4,z513800 if h=1 then fnd():h=int((k(i,3)/value)*(2+rnd(1))):s=s-h13801 updateshields()13803 sprite 4 off 13805 if s>013810 if (h>20)13820 if (rnd(1)>0.6)^(h/s<=0.02)13830 else 13840 r1=random(7)+1:d#(r1)=d#(r1)-(s-int(d#(7)*10)/h)*rnd(1)13850 explode(s2,s1,1):clrconsole():showface(2):getdevicename(r1)13855 printat(g2$+" Damaged by the Hit!",23,34)13856 if r1=7 then sprite 31 image 38 to 22,19613860 printat("Press any key to continue",23,35)13865 k=0:while k=0:k=inkey():wend 13870 endif 13910 endif 13912 else 13915 if h>0 then explode(s2,s1,6):ed=113917 endif 13918 endif 13920 next 13930 endif 13940 endproc 14000 proc phasers()14002 if k3>014005 if d#(4)>=014010 sprite 0 off 14020 printat("Power",14,45)14030 printat(" 000 ",14,46)14040 sprite 34 image 37 to 68,19214050 k=0:w1=1:while k<>1314060 k=0:k=inkey()14070 if k=6 then ph=ph+1014080 if k=2 then ph=ph-1014090 if k=16 then ph=ph+10014100 if k=14 then ph=ph-10014110 if ph>500 then ph=50014120 if ph<0 then ph=014130 printat(right$("00"+str$(ph),3),15,46)14140 wend 14150 sprite 34 off :e=e-ph\2:ph=ph\k3:powermeter():sfx(5)14160 for i=1 to k3:k(i,0)=random(3):next 14165 clrconsole()14170 if k3>0 then moveklingons()14180 for i=1 to 314185 if k(i,3)>014190 trayectory(s2,s1,k(i,2),k(i,1)):pix=014200 c=0:while (c<di)&(pix<>1)14210 z4=int(s2*40+20+c*xi#):z5=int(s1*16+8+c*yi#)14220 getpixel(z4,z5)14230 c=c+1:wend 14240 if c=di:h=1:else :h=0:endif 14245 sfx(2)14250 for d=1 to ph14260 line color 240 from s2*40+20,s1*16+8 to z4,z514270 for c=1 to 5:next 14280 line color 72 from s2*40+20,s1*16+8 to z4,z514285 for c=1 to 5:next 14310 next 14320 line color 0 from s2*40+20,s1*16+8 to z4,z514330 endif 14340 if h=1:fnd():h=int((ph/value)*(2+rnd(1)))14350 if h<=(0.15*k(i,3))14360 printat("Sensors show no damage on Klingon ship",23,34+i)14370 else 14380 printat(str$(h)+" Units hit on Klingon ship...",23,34+i)14390 k(i,3)=k(i,3)-h14400 if k(i,3)<=0:printat(" Enemy Destroyed!",56,34+i)14410 explode(k(i,2),k(i,1),4):k3=k3-1:k9=k9-1:sprite 5+i off 14420 z1=k(i,1):z2=k(i,2):updatequadrant(0):?(g+q1*8+q2)=?(g+q1*8+q2)-1014430 ?(z+q1*8+q2)=?(g+q1*8+q2):?(shapes+5+i)=25514435 else 14436 printat(str$(k(i,3))+" Units remaining.",56,34+i)14440 endif 14450 endif 14460 else if k(i,3)>0 then printat("Target missed",23,34+i)14470 endif 14480 next 14490 kfire()14500 sprite 0 to 72,192 image 4914510 tactical()14520 else 14530 clrconsole():showface(2)14540 printat("Phasers are inoperative, sir",23,34)14550 endif 14555 printat("     ",14,45):printat("Ready",14,46)14560 else 14570 clrconsole():showface(0)14580 printat("Unless enemies are cloacked, Phasers have no target.",23,34)14590 endif 14595 endproc 14600 proc repairdamage()14605 clrconsole():row=014610 for i=1 to 814620 getdevicename(i)14630 if d#(i)<014640 if n>10:d#(i)=d#(i)+1:else :d#(i)=d#(i)+(n/12):endif 14650 if d#(i)>=014660 printat(g2$+" Repair completed!",23,34+row):row=row+114665 d#(i)=014670 else 14680 printat(g2$+" state of repair improved",23,34+row):row=row+114690 endif 14700 endif 14710 next 14715 if d#(7)>=0 then sprite 31 off 14720 endproc 14800 proc photontorpedo()14805 sprite 3 image 17 off :ki=1714810 if d#(5)>=014820 if p0>014830 if d#(2)>=014835 d=0:calcnav()14840 else 14842 printat("Torpedo aiming manual..",23,34)14845 w1=10:navopt()14847 endif 14848 p0=p0-1:trayectory(s2,s1,x,y):e=e-20:powermeter():pix=014849 printat(right$("00"+str$(p0),2),17,52)14850 sfx(3):pix=0:c=0:while (c<=di)&(pix<>1)14860 z4=int(s2*40+20+c*xi#):z5=int(s1*16+8+c*yi#)14865 getpixel(z4,z5)14870 if (z4<8)^(z4>312)^(z5<5)^(z5>121) then pix=114871 for co=6 to 18:if hit(3,co)=1 then pix=114872 next 14873 if c\10<>d14874 if ki=17:ki=19:else :ki=17:endif 14875 d=c\10:endif 14876 sprite 3 image ki to z4,z514880 c=c+1:wend 14890 z4=int(((z4)/40)+0.5*xs):z5=int(((z5)/16)+0.5*ys)14895 sprite 3 off :explode(z4,z5,4):z1=z5:z2=z414900 for c=2 to 3:searchquadrant(c)14910 if (z3=1)&(c=2)14920 for i=1 to 314930 if (k(i,1)=z5)&(k(i,2)=z4)14940 hit=int(150*rnd(1))+75:k(i,3)=k(i,3)-hit14960 showface(2):printat("Photon hits for "+str$(hit)+" damage.",23,32+i*2)14970 if k(i,3)>014980 printat("Sensors show "+str$(k(i,3))+" Units remaining.",23,35)14990 else 15000 printat("Klingon ship destroyed, Sir!",23,35):k3=k3-1:k9=k9-115010 explode(z4,z5,4):sprite 5+i off 15015 z1=k(i,1):z2=k(i,2):?(shapes+5+i)=25515016 updatequadrant(0):?(g+q1*8+q2)=?(g+q1*8+q2)-1015017 ?(z+q1*8+q2)=?(g+q1*8+q2)15020 endif 15030 endif 15040 next 15050 endif 15060 next 15070 endif 15075 for i=1 to k3:k(i,0)=random(2):next 15076 moveklingons():kfire()15080 else 15085 printat("Torpedo Launcher unresponsive, Sir",23,34)15090 endif 15110 printat("Press any key to continue",23,38)15120 k=0:while k=0:k=inkey():wend 15130 opt=0:tactical()15200 endproc 15500 proc endgame()15505 for c=6 to 19:sprite c off :next 15510 if k9=015520 text "Federation Victory!"dim 1 color 245 to 90,3015530 endif 15540 if (k9>0)&(e<=0)15550 text "Earth is Doomed!"dim 1 color 5 to 105,3015560 endif 15570 if (k9>0)&(s<0)15580 text "Enterprise Destroyed"dim 1 color 248 to 85,3015590 endif 15592 printat("Press any key to play again or Q to Quit",20,20)15595 k=0:while k=0:k=inkey():wend 15600 endproc 15700 proc basedock()15710 showface(0):clrconsole():d#(0)=015715 printat("Shields dropped to prepare for Docking...",23,34):pause(4)15720 printat("Enterprise Docked, energy Transfer Initiated.",23,35)15730 while (e<3000)15740 e=e+60:sfx(12):pw=1:powermeter()15750 wend 15760 powermeter()15770 if r1=0:r1=random(5)+1:if r1+p0>10 then r1=10-p15775 p0=p0+r1:printat(right$("0"+str$(p0),2),17,52)15780 endif 15785 if p<1015786 if ?(g+q1*8+q2)>=200:showface(4)15790 printat("Base transfers "+str$(r1)+" torpedoes to Enterprise.",23,36)15795 ?(g+q1*8+q2)=?(g+q1*8+q2)-100:?(z+q1*8+q2)=?(g+q1*8+q2):pause(3)15800 endif 15810 endif 15820 p=p0:for c=1 to 8:if d#(c)<0 then d#(0)=d#(0)+d#(c)15830 next 15835 pause(4):clrconsole()15840 if d#(0)<0:showface(2)15850 printat("Base can repair the ship in "+str$(abs(d#(0)))+" days",23,34)15860 showface(1):printat("Press 'Y' to proceed or other key to refuse",23,35)15870 k=0:while k=0:k=inkey():wend 15890 if (k=121)^(k=89)15900 printat("Repair in Progress",23,36)15910 for c=0 to abs(int(d#(0))):sfx(13):printat(".",42+c,36):pause(2):next 15920 for c=0 to 8:d#(c)=0:next :t8#=t8#-d#(0)15930 printat("Repairs Complete!, press any key to leave dock",23,38)15940 else 15950 showface(3):printat("Leaving dock, Sir",23,36)15960 endif 15970 endif 15980 endproc 16000 proc showdamage()16005 clrconsole():showface(2):if d#(6)>=016007 printat("Damage Report, Sir!",23,34)16010 clrmain():vw=416020 for r1=1 to 716030 getdevicename(r1)16035 printat("DAMAGE ASSESSMENT",24,42)16040 printat(g2$,24,43+r1*2)16045 if d#(r1)<0 then roundrect(96,(43+r1*2)*4-1,216,(44+r1*2)*4,240,2)16050 printat(left$(str$(abs(d#(r1))),4),50,43+r1*2)16060 next 16070 else 16080 printat("Damage Diagnostics are out of line, Sir",23,34)16090 endif 16100 endproc 19999 end 20000 data 1,2,3,4,5,10,6,7,7,6,8,9